Batch extraction of K factors using Prospino
by Flip Tanedo
for SS2L signatures of RPV gluinos
with Mike Saelim, Maxim Perelstein, and Josh Berger

22 Jan 2013
pt267@cornell.edu


WHAT DOES IT DO: This is code for doing a batch run of Prospino using a
shell script to extract the K factors for a given process while scanning over
a pair of masses (e.g. in a simplified model). The code consists of two
c++ programs and a bash script and can straightforwardly be adapted as part
of a larger scan over parameter space that also runs Monte Carlo calculations.

This code has been tested to work with Prospino2.

FILES:
------
Makefile:   Makefile
Drivers:    scanK.sh
Programs:   RPVgProspinoSpectrum.cpp
            RPVgKout.cpp
Auxiliary:  FlipCommandFileFixer.cpp/h
Output:     Kfactors.dat (default filename)
Input:      prospino.in.les_houches (in Prospino directory)
            prospino.dat (generated by Prospino)


USAGE:
------

1. Modify the Makefile with your compiler information.
    
2. In the terminal, compile the c++ programs using the command 'make'
    If there are errors, then it's either your fault or my fault.
    
3. If successful, make will output instructions for how to use the compiled code.
    RPVgProspinoSpectrum updates the prospino.in.les_houches spectrum file
    RPVgKfactors.dat takes the Prospino output and appends the K factor to a file

4. You can now copy the binaries (RPVgProspinoSpectrum and RPVgKout) to your
    Prospino directory. Alternately, you can keep these in a separate dirctory
    and modify the bash script scanK.sh with the appropriate paths.
    
5. Set up Prospino as usual. You'll have to modify prospino_main.f90 with the
    type of process you're considering and then modify prospino.in.les_houches
    to decouple all of the particles that are not in your simplified model. 
    
    For simple processes (e.g. QCD production) you don't have to worry about 
    couplings. Don't worry about the starting values of the masses for scanning,
    the code will replace those values automatically.
    
    As a default, there's a prospino.in.les_houches file in this folder
    which decouples all of the sparticles.
    
6. Scanning with a batch script: this was the raison d'etre for this code. 
    This is straightforward since you can just scan over the program options.
    The script scan.sh automates the scan once RPVgPoint is compiled. Make sure
    that scan.sh has the appropriate permissions to be executed (use the chmod
    command). The script takes 7 arguments:
	$1 stop   mass starting value
	$2 stop   mass increment
	$3 stop   mass number of steps
	$4 gluino mass starting value
	$5 gluino mass increment
	$6 gluino mass number of steps
	$7 signal region
    So, for example, one can run:
	./scan.sh 200 10 3 1200 10 3 8
    You have to modify scan.sh directly if you want to change the other options,
    e.g. if you want to use different template cmnd or spc files.
    
    

Good scanning,
Flip, Jan 2013
    